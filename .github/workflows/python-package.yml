# Workflow is based on the Astropy GitHub actions workflow, ci_workflows.yml
name: CI

on:
    push:
        branches:
            - '*'
        tags:
            - '*'
    pull_request:

jobs:
    tests:
        name: Unit tests
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: true
            matrix:
                os: [ubuntu-latest]
                python-version: [3.8] 
                astropy-version: ['==5.0'] 
                fitsio-version: ['==1.1.6']
        env:
            FASTSPECFIT: ${GITHUB_WORKSPACE}/fastspecfit
            DESI_ROOT: ${FASTSPECFIT}/desi
            DUST_DIR: ${FASTSPECFIT}/dust
            FASTSPECFIT_TEMPLATES: ${FASTSPECFIT}/SSP-CKC14z

        steps:
            - name: Checkout code
              uses: actions/checkout@v2
              with:
                fetch-depth: 0

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                python-version: ${{ matrix.python-version }}

            - name: Install Python dependencies
              run: |
                python -m pip install --upgrade pip wheel
                python -m pip install pytest
                python -m pip install -r requirements.txt
                python -m pip install -U 'astropy${{ matrix.astropy-version }}'
                python -m pip cache remove fitsio
                python -m pip install --no-deps --force-reinstall --ignore-installed 'fitsio${{ matrix.fitsio-version }}'

            - name: Verify Installation
              run: pip list

            - name: Run the test
              run: PYTHONPATH=${GITHUB_WORKSPACE}/py FASTSPECFIT=${GITHUB_WORKSPACE} DESI_ROOT=${GITHUB_WORKSPACE}/desi pytest

    docs:
        name: Doc test
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                python-version: [3.8]

        steps:
            - name: Checkout code
              uses: actions/checkout@v2
              with:
                fetch-depth: 0
                
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                python-version: ${{ matrix.python-version }}
                
            - name: Install Python dependencies
              run: python -m pip install --upgrade pip wheel Sphinx
              
            - name: Test the documentation
              run: sphinx-build -W --keep-going -b html doc doc/_build/html

    style:
        name: Style check
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                python-version: [3.8]

        steps:
            - name: Checkout code
              uses: actions/checkout@v2
              with:
                fetch-depth: 0
                
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                python-version: ${{ matrix.python-version }}
                
            - name: Install Python dependencies
              run: python -m pip install --upgrade pip wheel pycodestyle
              
            - name: Test the style; failures are allowed
              # This is equivalent to an allowed falure.
              continue-on-error: true
              run: pycodestyle --count py/fastspecfit
